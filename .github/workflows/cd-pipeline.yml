# .github/workflows/cd-pipeline.yml

name: CD - Deploy Services to AKS

on:
  pull_request:
    branches:
      - develop
    paths:
      - 'backend/**'
      - 'frontend/**'

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  AKS_CLUSTER_NAME: 'SIT722-HD-AKS-Cluster'
  AKS_RESOURCE_GROUP: 'SIT722-HD-RG'
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy_to_staging:
    runs-on: ubuntu-latest
    environment: Staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Kubernetes context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
      
      - name: Create Staging Namespace
        run: |
          kubectl create namespace staging --dry-run=client -o yaml | kubectl apply -f -

      - name: Create or Update Staging Secrets
        run: |
          kubectl create secret generic ecomm-secrets-staging \
            --namespace=staging \
            --from-literal=POSTGRES_USER='${{ secrets.POSTGRES_USER }}' \
            --from-literal=POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' \
            --from-literal=AZURE_STORAGE_ACCOUNT_NAME='${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}' \
            --from-literal=AZURE_STORAGE_ACCOUNT_KEY='${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Update Kustomize and Deploy to Staging
        run: |
          kubectl apply -k k8s/overlays/staging/

      - name: Verify staging deployments
        run: |
          echo "Waiting for staging deployments to roll out..."
          kubectl rollout status deployment/frontend-staging -n staging
          kubectl rollout status deployment/product-service-staging -n staging
          kubectl rollout status deployment/order-service-staging -n staging
          echo "✅ All services deployed to staging successfully!"

      - name: Logout from Azure
        if: always()
        run: az logout

  deploy_to_production:
    runs-on: ubuntu-latest
    needs: deploy_to_staging
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Kubernetes context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}

      - name: Create Production Namespace
        run: |
          kubectl create namespace production --dry-run=client -o yaml | kubectl apply -f -

      - name: Create or Update Production Secrets
        run: |
          kubectl create secret generic ecomm-secrets-production \
            --namespace=production \
            --from-literal=POSTGRES_USER='${{ secrets.POSTGRES_USER }}' \
            --from-literal=POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' \
            --from-literal=AZURE_STORAGE_ACCOUNT_NAME='${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}' \
            --from-literal=AZURE_STORAGE_ACCOUNT_KEY='${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Update Kustomize and Deploy to Production
        run: |
          kubectl apply -k k8s/overlays/production/

      - name: Verify production deployments
        run: |
          echo "Waiting for production deployments to roll out..."
          kubectl rollout status deployment/frontend-production -n production
          kubectl rollout status deployment/product-service-production -n production
          kubectl rollout status deployment/order-service-production -n production
          echo "✅ All services deployed to production successfully!"

      - name: Logout from Azure
        if: always()
        run: az logout